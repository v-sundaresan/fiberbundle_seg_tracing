#!/usr/bin/env fslpython
import argparse
import sys
import pkg_resources
import codecs
from fibseg.fib_seg import (fibseg_commands, fibseg_help_messages)

#=========================================================================================
# FIBER BUNDLE SEGMENTATION TOOL (FIBSEG)
# Vaanathi Sundaresan
# 01-04-2021, Oxford
#=========================================================================================
if __name__ == "__main__":
    desc_msgs = fibseg_help_messages.desc_descs()
    epilog_msgs = fibseg_help_messages.epilog_descs()
    parser = argparse.ArgumentParser(prog='fibseg', formatter_class=argparse.RawDescriptionHelpFormatter,
                                    description=desc_msgs['mainparser'], epilog=epilog_msgs['mainparser'])
    subparsers = parser.add_subparsers(dest="command")

    parser_evaluate = subparsers.add_parser('evaluate', formatter_class=argparse.RawDescriptionHelpFormatter,
                                        description=desc_msgs['evaluate'], epilog=epilog_msgs['subparsers'])
    requiredNamedevaluate = parser_evaluate.add_argument_group('Required named arguments')
    requiredNamedevaluate.add_argument('-i', '--inp_dir', type=str, required=True,
                                       help='Input directory containing test images')
    requiredNamedevaluate.add_argument('-m', '--model_name', type=str, required=True,
                                       help='Model basename with absolute path (will not be considered if optional argument -p=True)')
    requiredNamedevaluate.add_argument('-o', '--output_dir', type=str, required=True,
                                       help='Directory for saving predictions')
    optionalNamedevaluate = parser_evaluate.add_argument_group('Optional named arguments')
    requiredNamedevaluate.add_argument('-a', '--ascii_dir', type=str, required=True,
                                       help='Directory containing brain ASCII coordinates (required for priormap)')
    optionalNamedevaluate.add_argument('-ps', '--patch_size', type=int, required=False, default=1024,
                                    help='Patch size (2^N) (default=1024)')
    optionalNamedevaluate.add_argument('-mtype', '--model_type', type=str, required=False, default='unet',
                                       help='unet or transunet')
    optionalNamedevaluate.add_argument('-nclass', '--num_classes', type=int, required=False, default=2,
                                help='Number of classes in the labels used for training the model (for both pretrained models, -nclass=2) (default=2)')
    optionalNamedevaluate.add_argument('-int', '--intermediate', type=bool, required=False, default=False, help='Saving intermediate predictionss (individual planes) for each subject (default=False)')
    optionalNamedevaluate.add_argument('-fibspec', '--fiber_specs', type=bool, required=False, default=False,
                                       help='Display debug messages (default=False)')
    optionalNamedevaluate.add_argument('-v', '--verbose', type=bool, required=False, default=False,
                                       help='Display debug messages (default=False)')

    parser_evaluate.set_defaults(func=fibseg_commands.evaluate)

    args = parser.parse_args()

    if args.command == 'evaluate':
        fibseg_commands.evaluate(args)
    else:
        parser.parse_args(["--help"])
        sys.exit(0)



